<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- freBoardMapper.xml -->
  	<!-- name는 해당 인터페이스 완전한 이름을 사용 -->
  	
  	<!-- 조건에 맞는 애들을 찾아주는 역할 검색관련  -->
  <mapper namespace="com.study.res.dao.IResDao">
  		<sql id="whereSearchClause">
  					<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)
									and @org.apache.commons.lang3.StringUtils@isNotBlank(searchType)">
						<choose>
							<when test='searchType == "T"'>
								AND mem_id LIKE '%' || #{searchWord} || '%'
							</when>
							<when test='searchType == "W"'>
								AND res_id LIKE '%' || #{searchWord} || '%'
							</when>
							<!-- <when test='searchType == "prodname"'> 
								AND product_name LIKE '%' || #{searchWord} || '%'
							</when> -->
							<when test='searchType == "C"'>
								AND product_id LIKE '%' || #{searchWord} || '%'
							</when>
					<!-- 		<when test='searchType == "memname"'>
								AND mem_name LIKE '%' || #{searchWord} || '%'
							</when> -->
						</choose>
					</if>
					<!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchCategory)">
						and bo_category =  #{searchCategory} 
					</if> -->
  			</sql>
  				<!-- 조건에 맞는 애들을 찾아주는 역할 검색관련  -->
  				
  				
  				  <select id="getResList" 
  				 parameterType="com.study.res.vo.ResSearchVO"
  				 	resultType="com.study.res.vo.ReserveVO">
						<include refid="common.PRE_PAGING_QRY"/>
									SELECT
								    res_id 					
								    , pay_yn 			
								    , product_id 	
								    , mem_id 			
								    , cancel_yn 		
								    , res_people 	
								    , res_price 		
								    , req_claim 		
								    , res_date 
								    , account 			
								    , account_bank 
								FROM
    								reserve
								where 1=1
								
								
								
  						<include refid="whereSearchClause"/>
  						ORDER by res_id DESC
  						<include refid="common.POST_PAGING_QRY"/>
  				</select> 
  				
  			
  				
  					
  				
  				<select id="getResCount"
  							parameterType="com.study.res.vo.ResSearchVO" 
  							resultType="int">
  					SELECT count(*) 
						FROM reserve  
						where 1=1
  				<include refid="whereSearchClause"/>
  					
  			</select>
  				
  				
  				
  				
  				
  				
  			
  			
  				
  			
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  			 
  			 
  		   <insert id="insertReserve"
  			 	parameterType="com.study.res.vo.ReserveVO">
  			 	<selectKey keyProperty="resId" resultType="String" order="BEFORE">
  			 		SELECT TO_CHAR(sysdate, 'YYYYMMDD') || LPAD(SEQ_RES.NEXTVAL, 4, '0') FROM dual
  			 	</selectKey>
  			 	
  	 			INSERT INTO reserve (
									      res_id
									    , pay_yn
									    , product_id
									    , mem_id
									    , cancel_yn
									    , res_people
									    , res_price
									    , req_claim
									    , res_date
									    , account
									    , account_bank
									) VALUES (
									     #{resId}
									    	,	'N' 
									            ,  #{productId} 
									    , #{memId}
									    , 'N'
											 , '1'
											 , '1'
										  , #{reqClaim}
									    , sysdate
									    , #{account}
									    , #{accountBank}
										)
  				</insert>
  				
  				 <update id="updateReservePay">
  				 				UPDATE reserve
									SET
									    pay_yn = #{payYn}
									WHERE
									 		res_id = #{resId}
  				 		
  				 
  				 </update>
  				
  					<update id="updateReserveCancel">
  					UPDATE reserve
									SET
									    cancel_yn = #{cancelYn}
									WHERE
									    res_id = #{resId}
									   
  					
  					</update>  
  					 
  					<insert id="insertTourist" parameterType="com.study.res.vo.TouristVO">
	  					     INSERT INTO tourlist_info (
									    tourist_id
									    , tourist_kr_nm
									    , tourist_fst_nm
									    , tourist_lst_nm
									    , res_id
									    , tourist_age
									    , tourist_hp
										) VALUES (
										     #{resId} || '_' || SEQ_TOURIST_INFO.NEXTVAL
										    , #{touristKrNm}
										    , #{touristFstNm}
										    , #{touristLstNm}
										    , #{resId}
										    , #{touristAge}
										    , #{touristHp}
										)
  						</insert>
  						
  						<select id="getTourist" 
  						
  						resultType="com.study.res.vo.TouristVO">
  						SELECT
							    tourist_id
							    , tourist_kr_nm
							    , tourist_fst_nm
							    , tourist_lst_nm
							    , tourist_age
							    , tourist_hp
							FROM
							    tourlist_info
						</select>
						
					<select id="getUserRes" 
  				 parameterType="com.study.login.vo.UserVO"
  				 	resultType="com.study.res.vo.ReserveVO">
						<!-- <include refid="common.PRE_PAGING_QRY"/> -->
						<!-- 	<include refid="common.PRE_PAGING_QRY"/> -->
									SELECT
									    res_id
									    , pay_yn
									    , mem_id
									    , res_people
									    , res_price
									    , res_date
									<!-- WHERE mem_id = #{userId} -->
							<!-- 		WHERE res_id = #{resId} -->
									FROM
									    reserve
									WHERE mem_id = #{userId}
						<!-- 		<include refid="whereSearchClause"/> -->
									ORDER by res_id DESC
						<!-- 		<include refid="common.POST_PAGING_QRY"/> -->
							<!-- 	ORDER by res_id DESC -->
  						<!-- SELECT * FROM reserve -->
  						<!-- <include refid="common.POST_PAGING_QRY"/> -->
  				</select> 
						
						
						
						
						
						
						
						
						
						
						
						
  	</mapper>
  		
  	
  	
  	