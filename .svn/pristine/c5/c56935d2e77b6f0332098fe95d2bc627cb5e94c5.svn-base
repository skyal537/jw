package com.study.res.service;



import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.study.common.exception.BizException;

import com.study.login.vo.UserVO;
import com.study.res.dao.IResDao;
import com.study.res.dao.ITouristInfoDao;
import com.study.res.vo.ResSearchVO;
import com.study.res.vo.ReserveVO;
import com.study.res.vo.TouristVO;

@Service
public class resServiceImpl implements IResService {
	
	@Autowired
	private IResDao resDao;
	
	@Autowired
	private ITouristInfoDao touristInfoDao;
	private final Logger logger = LoggerFactory.getLogger(getClass());

	@Override
	public List<ReserveVO> getResList(ResSearchVO searchVO) throws BizException {
		int rowCount = resDao.getResCount(searchVO);
		searchVO.setTotalRowCount(rowCount);
		searchVO.setting();
		System.out.println(searchVO.getFirstRow());
		System.out.println(searchVO.getLastRow());
		logger.debug("searchVO = {}",searchVO);

		return resDao.getResList(searchVO);
	}

	
	@Override
	public void registReserve(ReserveVO reserve) throws BizException {
		resDao.insertReserve(reserve);
		
		List<TouristVO> touristes =  reserve.getTourList();
		for(TouristVO vo : touristes) {
			vo.setResId(reserve.getResId());
			touristInfoDao.insertTouristInfo(vo);
		}
		
	}


	@Override
	public void insertTourist(TouristVO tourist) throws BizException {
		resDao.insertTourist(tourist);
		
	}


	@Override
	public List<TouristVO> getTourist(TouristVO tourist) throws BizException {
		return resDao.getTourist(tourist);
	}


	@Override
	public List<ReserveVO> getUserRes(UserVO user) throws BizException {

		System.out.println(user.getUserId());
		return resDao.getUserRes(user);
	}


	@Override
	public ReserveVO getRes(String resId) throws BizException {
		ReserveVO reserveVO = resDao.getRes(resId);
		return reserveVO;
	}


	@Override
	public int updateReservePay(ReserveVO reserve) throws BizException {
		return resDao.updateReservePay(reserve);
	}


	@Override
	public int updateReserveCancel(ReserveVO reserve) throws BizException {
		return resDao.updateReserveCancel(reserve);
	}

	//삭제(취소)관련
	@Override
	public void removeBoard(ReserveVO reserve) throws BizException {
//		try {
//			int res = resDao.deleteBoard(reserve);
//			if(res<1) {
//				throw new BizRegistFailException();
//			}
//		} catch (SQLException e) {
//			throw new BizException();
//		}
		int res = resDao.deleteBoard(reserve);
	}


	@Override
	public void removeCheckedBoard(String[] reserveIds) throws BizException {
//		try {
//			resDao.deleteCheckedBoard(reserveIds);
//		} catch (SQLException e) {
//			throw new BizException(e);
//		}
		resDao.deleteCheckedBoard(reserveIds);
	}

	
//	
//	
//	@Override
//	public void updateTourist(TouristVO tourist) throws BizException {
//		
//		resDao.updateTourist(tourist);
//	}

	//수정 관련 
	@Override
	public void updateReserve(ReserveVO reserve) throws BizException {
		
		
		List<TouristVO> touristes =  reserve.getTourList();
		for(TouristVO vo : touristes) {
			vo.setResId(reserve.getResId());
			resDao.updateTourist(vo);
		}
		resDao.updateReserve(reserve);
	}


	/*
	 * @Override public void updateTourist(TouristVO tourist) throws BizException {
	 * // TODO Auto-generated method stub
	 * 
	 * }
	 */



	
	
	

}
